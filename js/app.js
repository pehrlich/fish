// Generated by CoffeeScript 1.6.3
(function() {
  window.app = angular.module("Fish", []);

  app.controller("FishController", [
    "$scope", "LeapService", "FishService", function($scope, LeapService, FishService) {
      var lastCommandTime, lastDirectionChangeTime;
      $scope.base_pose = {};
      $scope.paused = true;
      $scope.tilt = 0;
      $scope.activeHandId = void 0;
      LeapService.on('noseUp', function() {
        FishService.enqueue('stop');
        return $scope.noseState = 'noseUp';
      });
      LeapService.on('noseDown', function() {
        FishService.enqueue('stop');
        return $scope.noseState = 'noseDown';
      });
      LeapService.on('noseSteady', function() {
        FishService.enqueue('stop');
        return $scope.noseState = 'noseSteady';
      });
      $scope.intializeFromCurrentPose = function() {
        console.log('would initalize now');
        return $scope.base_pose = {};
      };
      LeapService.on('engage', function(hand) {
        $scope.intializeFromCurrentPose(hand);
        FishService.queue = [];
        return FishService.start();
      });
      LeapService.on('disengage', function() {
        return FishService.stop();
      });
      lastCommandTime = new Date();
      lastDirectionChangeTime = new Date();
      $scope.flapDirection = 'Right';
      $scope.autoFlap = function(frame) {
        var elapsedTime;
        elapsedTime = new Date() - lastDirectionChangeTime;
        if ($scope.flapDirection === 'Right' && elapsedTime > frame.rightFlapTime) {
          $scope.flapDirection = 'Left';
          FishService.enqueue('stop');
          lastDirectionChangeTime = new Date();
        } else if ($scope.flapDirection === 'Left' && elapsedTime > frame.leftFlapTime) {
          $scope.flapDirection = 'Right';
          FishService.enqueue('stop');
          lastDirectionChangeTime = new Date();
        }
        return $scope.flap();
      };
      $scope.flap = function() {
        var elapsedTime;
        elapsedTime = new Date() - lastCommandTime;
        if (elapsedTime > 80) {
          FishService.enqueue("flap" + $scope.flapDirection);
          return lastCommandTime = new Date();
        }
      };
      $scope.autoNose = function() {
        var elapsedTime;
        elapsedTime = new Date() - lastCommandTime;
        if (elapsedTime > 40) {
          FishService.enqueue($scope.noseState);
          return lastCommandTime = new Date();
        }
      };
      return LeapService.on('frame', function(frame) {
        if (!FishService.going) {
          return;
        }
        if ($scope.noseState === 'noseSteady') {
          $scope.autoFlap(frame);
        } else {
          $scope.autoNose(frame);
        }
        $scope.history = FishService.history;
        $scope.frame = frame;
        return $scope.$digest();
      });
    }
  ]);

}).call(this);
